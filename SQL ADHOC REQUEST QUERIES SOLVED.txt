1: Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
ANS:

selected table = dim_customer

SELECT
market
FROM gdb023.dim_customer
WHERE customer = "Atliq Exclusive"
AND region = "APAC"
GROUP BY market

==============================================


2: What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020 unique_products_2021 percentage_chg
ANS:

selected table = fact_sales_monthly

WITH yearly_count AS
(
SELECT
COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END) AS unique_products_2020,
COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) AS unique_products_2021
FROM gdb023.fact_sales_monthly
WHERE fiscal_year IN (2020,2021)

)

SELECT
y.unique_products_2020,
y.unique_products_2021,
ROUND((y.unique_products_2021 - y.unique_products_2020) * 100/ NULLIF(y.unique_products_2020,0),2) as percent_change
FROM yearly_count y


============================================


3: Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields, segment product_count

ANS:

selected table = dim_product

SELECT
segment,
COUNT(DISTINCT product) AS product_count
FROM gdb023.dim_product
GROUP BY segment
ORDER BY product_count DESC


================================================


4: Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment product_count_2020 product_count_2021 difference

ANS:

selected table = dim_product

WITH base_data AS
(
SELECT
p.segment,
COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END) AS product_count_2020,
COUNT(DISTINCT CASE WHEN s.fiscal_year = 2021 THEN s.product_code END) AS product_count_2021
FROM gdb023.dim_product p
JOIN fact_sales_monthly s
ON s.product_code = p.product_code 
GROUP BY segment
)

SELECT
b.segment,
b.product_count_2020,
b.product_count_2021,
ROUND((b.product_count_2021 - b.product_count_2020) *100 /NULLIF(b.product_count_2020,0),2) AS difference
FROM base_data b
ORDER BY difference DESC



===================================================


5: Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, product_code product manufacturing_cost

ANS:

selected table = fact_manufacturing_cost

WITH min_max_mcost AS(
SELECT
      MAX(manufacturing_cost) AS max_cost,
      MIN(manufacturing_cost) AS min_cost
FROM gdb023.fact_manufacturing_cost
)

SELECT
m.product_code,
p.product,
m.manufacturing_cost
FROM gdb023.fact_manufacturing_cost m
JOIN dim_product p
ON m.product_code = p.product_code
JOIN min_max_mcost mmc
ON m.manufacturing_cost = mmc.min_cost OR m.manufacturing_cost = mmc.max_cost



================================================


6: Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code customer average_discount_percentage

ANS: 

selected_table = fact_pre_invoice_deduction


WITH CTE1 AS
(
SELECT
      c.customer_code,
      c.customer,
      AVG(i.pre_invoice_discount_pct) AS average_discount_percentage,
	  AVG(AVG(i.pre_invoice_discount_pct)) OVER() AS overall_average_discount_percentage
FROM gdb023.fact_pre_invoice_deductions i
JOIN dim_customer c
ON c.customer_code = i.customer_code
WHERE c.sub_zone = "India"
AND i.fiscal_year = "2021"
GROUP BY c.customer_code,c.customer
)

SELECT
customer_code,
customer,
average_discount_percentage
FROM CTE1
WHERE 
     average_discount_percentage > overall_average_discount_percentage
ORDER BY average_discount_percentage DESC
LIMIT 5


=======================================================


7: Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . This analysis helps to get an idea of low and high-performing months and take strategic decisions. The final report contains these columns: Month Year Gross sales Amount

ANS:

selected_table = fact_sales_monthly


SELECT
      MONTH(s.date) AS Month,
      YEAR(s.date) AS Year,
      SUM(s.sold_quantity*g.gross_price) AS Gross_sales_amount
FROM gdb023.fact_sales_monthly s
JOIN fact_gross_price g
    ON g.product_code = s.product_code
JOIN dim_customer c
    ON c.customer_code = s.customer_code
WHERE Customer = "Atliq Exclusive"
GROUP BY 
        Year,Month
ORDER BY 
        Year,Month


========================================================


8: In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, Quarter total_sold_quantity

ANS:

selected_table = fact_sales_monthly


SELECT
QUARTER(date) AS Quarter,
SUM(sold_quantity) AS Total_quantity_sold
FROM gdb023.fact_sales_monthly
WHERE fiscal_year = "2020"
GROUP BY Quarter
ORDER BY Total_quantity_sold DESC



============================================================


9: Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields, channel gross_sales_mln percentage

ANS: 

selected_table = fact_sales_monthly


WITH CTE1 AS
(
SELECT
c.channel AS Channel,
SUM(s.sold_quantity*g.gross_price) AS gross_sales
FROM gdb023.fact_sales_monthly s
JOIN dim_customer c
     ON c.customer_code = s.customer_code
JOIN fact_gross_price g
     ON g.product_code = s.product_code
WHERE s.fiscal_year = "2021"
GROUP BY c.channel
)

SELECT
      channel,
      gross_sales,
      (gross_sales / (SELECT SUM(gross_sales) FROM CTE1)) *100 AS Percentage
FROM CTE1
ORDER BY gross_sales DESC


==========================================================


10: Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division product_code,product total_sold_quantity rank_order

ANS=

selected_table = dim_product


WITH CTE1 AS
(
SELECT
p.division,
p.product_code,
SUM(s.sold_quantity) AS total_sold_quantity,
ROW_NUMBER() OVER(PARTITION BY p.division ORDER BY SUM(s.sold_quantity) DESC) AS rank_order
FROM gdb023.dim_product p
JOIN fact_sales_monthly s
	 ON p.product_code = s.product_code
WHERE s.fiscal_year = "2021"
GROUP BY p.division,p.product_code
)

SELECT 
      ps.division,
      ps.product_code,
      p.product,
      ps.total_sold_quantity,
      ps.rank_order
FROM CTE1 ps
JOIN dim_product p
ON p.product_code = ps.product_code
WHERE ps.rank_order <=3
ORDER BY ps.division,ps.rank_order

====================================================================
====================================================================